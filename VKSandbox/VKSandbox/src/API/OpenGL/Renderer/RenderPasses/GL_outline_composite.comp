#version 460 core
#include "../common/types.glsl"

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
layout(rgba16f, binding = 0) uniform image2D outputImage;
layout(r8, binding = 1) uniform image2D outlineMask;
layout(r8, binding = 2) uniform image2D outlineResult;

uniform ivec2 u_pixelOffset;
uniform ivec2 u_invocationBounds;

void main() {
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy) + u_pixelOffset;
    
    if(gl_GlobalInvocationID.x >= u_invocationBounds.x || gl_GlobalInvocationID.y >= u_invocationBounds.y) {
        return;
    }

    vec4 inputColor = imageLoad(outputImage, pixelCoords);
    float mask      = imageLoad(outlineMask, pixelCoords).r;
    float result    = imageLoad(outlineResult, pixelCoords).r;

    if (result == 1.0 && mask == 0.0) {
        vec4 outlineColor = vec4(1.0, 0.5, 0.0, 0.0);
        imageStore(outputImage, pixelCoords, outlineColor);
    }
}

